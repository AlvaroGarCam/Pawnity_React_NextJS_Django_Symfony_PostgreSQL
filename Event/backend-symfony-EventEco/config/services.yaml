# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    organizer_refresh_token_secret: '%env(REFRESH_TOKEN_SECRET)%'
    organizer_jwt_public_key: '%env(resolve:JWT_PUBLIC_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/{DependencyInjection,Entity,Tests,Kernel.php}'
    App\Service\ExampleService:
        public: true

    App\Organizer\Presentation\Assembler\Request\ProfileRequestAssembler:
        arguments:
            $projectDir: '%kernel.project_dir%'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    
    # Asegúrate de que los controladores están configurados correctamente
    App\Organizer\Presentation\InAdapter\:
        resource: '../src/Organizer/Presentation/InAdapter/'
        tags: ['controller.service_arguments']

    App\Event\Presentation\InAdapter\:
        resource: '../src/Event/Presentation/InAdapter/'
        tags: ['controller.service_arguments']
    
    App\Organizer\Infrastructure\Security\RefreshTokenGenerator:
        arguments:
            $secret: '%organizer_refresh_token_secret%'
            
    App\Organizer\Application\UseCase\InPort\RefreshSessionInterface:
        alias: App\Organizer\Application\UseCase\Command\RefreshSession\RefreshSessionService
        public: true

    App\Shared\Exception\GlobalExceptionHandler:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: 255 }
    
    App\Organizer\Application\UseCase\Command\RefreshSession\RefreshSessionService:
        arguments:
            $jwtSecret: '%organizer_refresh_token_secret%'
            $jwtPublicKey: '%organizer_jwt_public_key%'
    
    App\Organizer\Application\UseCase\Command\LogoutOrganizer\LogoutOrganizerHandler:
        public: true
        autowire: true